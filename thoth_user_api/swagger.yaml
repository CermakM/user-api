swagger: "2.0"
info:
  title: Thoth user API
  version: "0.1"
basePath: "/api/v1/"
consumes:
  - application/json
produces:
  - application/json
paths:
  /analyze:
    post:
      tags: [management]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: analyze
      summary: Analyze the given image asynchronously.
      parameters:
        - name: image
          in: query
          required: true
          description: Name of image - can also specify remote registry to pull image from.
          type: string
        - name: analyzer
          in: query
          required: true
          description: Name of analyzer (OpenShift build) to be triggered.
          type: string
        - name: debug
          in: query
          required: false
          description: Run the given analyzer in a verbose mode so developers can debug analyzer (requires access to the OpenShift console).
          type: boolean
          default: false
        - name: timeout
          in: query
          required: false
          description: Give a timeout to commands run inside the analyzer container.
          type: integer
        - name: cpu-request
          in: query
          required: false
          description: CPU request for the analyzer run.
          type: string
        - name: memory-request
          in: query
          required: false
          description: Memory request for the analyzer run.
          type: string
      responses:
        202:
          description: Successful response with analyzer (pod) id.
        400:
          description: On invalid request.
    get:
      tags: [results]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: list_analyzer_results
      summary: Retrieve a list of document ids for analyzer results.
      parameters:
        - name: page
          in: query
          required: false
          default: 0
          description: Page offset in pagination.
          type: integer
      responses:
        200:
          description: A list of analyzer results available.
        400:
          description: On invalid request.

  /analyze/{document_id}:
    get:
      tags: [results]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: get_analyzer_result
      summary: Retrieve an analyzer result.
      parameters:
        - name: document_id
          in: path
          required: true
          description: Document id to be retrieved.
          type: string
      responses:
        200:
          description: Analyzer result retrieved.
        400:
          description: On invalid request.
        404:
          description: The given document does not exist.

  /advise:
    post:
      tags: [management]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: advise
      summary: Give recommendations and advises for the given application stack.
      parameters:
        - name: debug
          in: query
          required: false
          description: Run adviser in verbose mode.
          type: boolean
          default: false
        - name: packages
          in: body
          required: true
          description: Packages to be solved.
          schema:
            $ref: "#/definitions/Packages"
        - name: packages_only
          in: query
          required: false
          description: Packages to be solved.
          type: boolean
          default: false
      responses:
        202:
          description: Successful response with solver (pod) id.
        400:
          description: On invalid request.

  /solve:
    post:
      tags: [management]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: solve
      summary: Solve the given application stack.
      parameters:
        - name: solver
          in: query
          required: true
          description: Name of solver (OpenShift build) to be triggered.
          type: string
        - name: debug
          in: query
          required: false
          description: Run the given analyzer in a verbose mode so developers can debug analyzer (requires access to the OpenShift console).
          type: boolean
          default: false
        - name: cpu-request
          in: query
          required: false
          description: CPU request for the analyzer run.
          type: string
        - name: memory-request
          in: query
          required: false
          description: Memory request for the analyzer run.
          type: string
        - name: packages
          in: body
          required: true
          description: Packages to be solved.
          schema:
            $ref: "#/definitions/Packages"
        - name: transitive
          in: query
          required: false
          description: Packages to be solved.
          type: boolean
          default: true
      responses:
        202:
          description: Successful response with solver (pod) id.
        400:
          description: On invalid request.

    get:
      tags: [results]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: list_solver_results
      summary: Retrieve a list of document ids for solver results.
      parameters:
        - name: page
          in: query
          required: false
          default: 0
          description: Page offset in pagination.
          type: integer
      responses:
        200:
          description: A list of analyzer results.
        400:
          description: On invalid request.

  /solve/{document_id}:
    get:
      tags: [results]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: get_solver_result
      summary: Retrieve a solver result.
      parameters:
        - name: document_id
          in: path
          required: true
          description: Document id to be retrieved.
          type: string
      responses:
        200:
          description: Analyzer result retrieved.
        400:
          description: On invalid request.
        404:
          description: The given document does not exist.

  /run:
    post:
      tags: [management]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: run
      summary: Run the given image inside cluster.
      parameters:
        - name: image
          in: query
          required: true
          description: Name of image - can also specify remote registry to pull image from.
          type: string
        - name: cpu-request
          in: query
          required: false
          description: CPU request for the analyzer run
          type: string
        - name: memory-request
          in: query
          required: false
          description: Memory request for the analyzer run
          type: string
        - name: environment
          in: body
          required: false
          description: Environment variables supplied to the pod.
          schema:
            $ref: "#/definitions/Environment"
      responses:
        202:
          description: Successful response with pod id.
        400:
          description: On invalid request.

  /sync:
    post:
      tags: [management]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: sync
      summary: Force sync to graph database.
      parameters:
        - name: sync_observations
          in: query
          required: false
          description: Sync also observations from analyzers.
          type: boolean
          default: false
        - name: secret
          in: query
          required: true
          description: A secret to sync graph database.
          type: string
          default: false
      responses:
        202:
          description: Successful response with pod id.
        400:
          description: On invalid request.
        401:
          description: Invalid authorization secret.

  /erase-graph:
    post:
      tags: [management]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: erase_graph
      summary: Clean graph database.
      parameters:
        - name: secret
          in: query
          required: true
          description: A secret to clean graph database.
          type: string
          default: false
      responses:
        201:
          description: Graph database was cleaned.
        400:
          description: On invalid request.

  /parse-log:
    post:
      tags: [buildlogs]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: parse_log
      summary: Parse Docker build log or installation log and show installed packages.
      parameters:
        - name: log_info
          in: body
          required: true
          description: A full log.
          schema:
            $ref: "#/definitions/Log"
      responses:
        200:
          description: Successful response.
        400:
          description: On invalid request.
        401:
          description: Invalid authorization secret.

  /buildlog:
    post:
      tags: [buildlogs]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: post_buildlog
      summary: Store the given build log.
      parameters:
        - name: log_info
          in: body
          required: true
          description: Build log to be stored.
          schema:
            $ref: "#/definitions/Log"
      responses:
        202:
          description: Successful response.
        400:
          description: On invalid request.

    get:
      tags: [buildlogs]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: list_buildlogs
      summary: Retrieve a list of document ids for stored build logs.
      parameters:
        - name: page
          in: query
          required: false
          default: 0
          description: Page offset in pagination.
          type: integer
      responses:
        200:
          description: A list of build log ids.
        400:
          description: On invalid request.

  /buildlog/{document_id}:
    get:
      tags: [buildlogs]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: get_buildlog
      summary: Retrieve the given build log.
      parameters:
        - name: document_id
          in: path
          required: true
          type: string
          description: Build log to be retrieved.
      responses:
        200:
          description: Successful response.
        400:
          description: On invalid request.
        404:
          description: The given build log does not exist.

  /log:
    get:
      tags: [management]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: get_pod_log
      summary: Show logs of a pod.
      parameters:
        - name: pod_id
          in: query
          required: true
          description: An ID of requested pod.
          type: string
      responses:
        200:
          description: Successful response.
        400:
          description: On invalid request.

  /status:
    get:
      tags: [management]
      x-swagger-router-controller: thoth_user_api.api_v1
      operationId: get_pod_status
      summary: Show pod status.
      parameters:
        - name: pod_id
          in: query
          required: true
          description: An ID of requested pod.
          type: string
      responses:
        200:
          description: Successful response.
        400:
          description: On invalid request.

definitions:
  Log:
    type: object
    required:
      - 'log'
    additionalProperties: false
    properties:
      log:
        type: string
        description: A full build or installation log that was output during image build.
        example: >
          Collecting tensorflow
            Downloading tensorflow-1.4.1-cp36-cp36m-manylinux1_x86_64.whl (41.2MB)
          Successfully installed tensorflow-1.4.1
  PodInfo:
    type: object
    required:
      - 'log'
    additionalProperties: false
    properties:
      log:
        type: string
        description: A full build or installation log that was output during image build.
        example: >
          Collecting tensorflow
            Downloading tensorflow-1.4.1-cp36-cp36m-manylinux1_x86_64.whl (41.2MB)
          Successfully installed tensorflow-1.4.1
  Packages:
    type: object
    required:
      - 'requirements'
    additionalProperties: false
    properties:
      requirements:
        type: string
        description: Requirements as stated in the requirements.txt file.
        example: >
          selinon==1.0.0rc3
  Environment:
    type: array
    description: Environment variables supplied on deployment.
    items:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          description: Name of the supplied environemnt variable.
          example: 'DEBUG'
        value:
          type: string
          description: Value of the supplied environment variable.
          example: '1'

